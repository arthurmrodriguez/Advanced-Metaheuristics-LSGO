techs = (

# ###############
# GA Techniques #
# ###############
 
          { alg    = "ga";
            cx     = "RealBlendCrossover";
            mut    = "RealFlipMutator";
            cmp    = "RealEuclideanComparator";
            ini    = "RealUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Real";
            desc   = "Real Encoding + Blend Crossover + Flip Mutator + Uniform Initializer + Euclidean Comparator";
            ids    = "RealBCUM";
            select = "random"; },

          { alg    = "ga";
            cx     = "RealUniformCrossover";
            mut    = "RealFlipMutator";
            cmp    = "RealEuclideanComparator";
            ini    = "RealUniformInitializer";
            obj    = "objective";
            pcx    = 1.0;
            pmut   = 0.01;
            coding = "Real";
            desc   = "Real Encoding + Uniform Crossover + Flip Mutator + Uniform Initializer + Euclidean Comparator";
            ids    = "RealUCUM";
            select = "random"; },

          { alg    = "ga";
            cx     = "RealUniformCrossover";
            mut    = "RealGaussianMutator";
            cmp    = "RealEuclideanComparator";
            ini    = "RealUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Real";
            desc   = "Real Encoding + Uniform Crossover + Gaussian Mutator + Uniform Initializer + Euclidean Comparator";
            ids    = "RealUCGM";
            select = "random"; },

          { alg    = "ga";
            cx     = "RealBlendCrossover";
            mut    = "RealGaussianMutator";
            cmp    = "RealEuclideanComparator";
            ini    = "RealUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Real";
            desc   = "Real Encoding + Blend Crossover + Gaussian Mutator + Uniform Initializer + Euclidean Comparator";
            ids    = "RealBCGM"; 
            select = "random";},

          { alg    = "ga";
            cx     = "IntegerOnePointCrossover";
            mut    = "IntegerSwapMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + One Point Crossover + Swap Mutator + Uniform Initializer + Element Comparator";
            ids    = "IntegerOPCSM";
            select = "random"; },

          { alg    = "ga";
            cx     = "IntegerTwoPointsCrossover";
            mut    = "IntegerSwapMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Two Points Crossover + Swap Mutator + Uniform Initializer + Element Comparator";
            ids    = "IntegerTPCSM"; 
            select = "random";},

          { alg    = "ga";
            cx     = "IntegerEvenOddCrossover";
            mut    = "IntegerSwapMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Even Odd Crossover + Swap Mutator + Uniform Initializer + Element Comparator";
            ids    = "IntegerEOCSM"; 
            select = "random";},

          { alg    = "ga";
            cx     = "IntegerUniformCrossover";
            mut    = "IntegerSwapMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerUniformInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Uniform Crossover + Swap Mutator + Uniform Initializer + Element Comparator";
            ids    = "IntegerUCSM";
            select = "random"; },

          { alg    = "ga";
            cx     = "IntegerOnePointCrossover";
            mut    = "IntegerSwapMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerOrderedInitializer";
            obj    = "objective";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + One Point Crossover + Swap Mutator + Ordered Initializer + Element Comparator";
            ids    = "IntegerOPSM";
            select = "random"; },

          { alg    = "ga";
            cx     = "IntegerOrderCrossover";
            mut    = "IntegerRepeatedExchangeMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerOrderedInitializer";
            obj    = "objectiveInt";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Order Crossover + Repeated Exchange Mutator + Ordered Initializer + Element Comparator";
            ids    = "IntegerOXREM"; },

          { alg    = "ga";
            cx     = "IntegerCycleCrossover";
            mut    = "IntegerSimpleInversionMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerOrderedInitializer";
            obj    = "objectiveInt";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Cycle Crossover + Simple Inversion Mutator + Ordered Initializer + Element Comparator";
            ids    = "IntegerCXSIM"; },

          { alg    = "ga";
            cx     = "IntegerOrderCrossover";
            mut    = "IntegerSimpleInversionMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerOrderedInitializer";
            obj    = "objectiveInt";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Order Crossover + Simple Inversion Mutator + Ordered Initializer + Element Comparator";
            ids    = "IntegerOXSIM";
            select = "random"; },

          { alg    = "ga";
            cx     = "IntegerAlternativeCycleCrossover";
            mut    = "IntegerRepeatedExchangeMutator";
            cmp    = "IntegerElementComparator";
            ini    = "IntegerOrderedInitializer";
            obj    = "objectiveInt";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Integer";
            desc   = "Integer Encoding + Cycle Crossover + Repeated Exchange Mutator + Ordered Initializer + Element Comparator";
            ids    = "IntegerCXREM";
            select = "random"; },

          { alg    = "ga";
            cx     = "RealOnePointCrossover";
            mut    = "RealFlipMutator";
            cmp    = "RealEuclideanComparator";
            ini    = "RealUniformInitializer";
            obj    = "objectiveReal";
            pcx    = 0.9;
            pmut   = 0.01;
            coding = "Real";
            desc   = "Real Encoding + One Point Crossover + Flip Mutator + Uniform Initializer + Euclidean Comparator";
            ids    = "RealOPCUM";
            select = "random"; },

# ################
# EDA Techniques #
# ################

          { alg         = "eda";
            ini         = "RealUniformInitializer";
            obj         = "objective";
            sper        = 0.1;
            network     = "GAUSSIAN_NETWORK";
            learnMethod = "GAGaussianNetwork::UMDA";
            scoreMethod = "GAGaussianNetwork::BIC_SCORE";
            coding      = "Real";
            desc        = "Real Encoding + Gaussian Network + Uniform Initializer + UMDA + BIC Score";
            ids         = "RealGaussUMDABIC"; },

          { alg         = "eda";
            ini         = "RealUniformInitializer";
            obj         = "objectiveReal";
            sper        = 0.1;
            network     = "GAUSSIAN_NETWORK";
            learnMethod = "GAGaussianNetwork::UMDA";
            scoreMethod = "GAGaussianNetwork::BIC_SCORE";
            coding      = "Real";
            desc        = "Real Encoding + Gaussian Network + Uniform Initializer + UMDA + BIC Score";
            ids         = "RealGaussUMDABICBI"; },

          { alg          = "eda";
            ini          = "IntegerUniformInitializer";
            obj          = "objective";
            sper         = 0.1;
            network      = "BAYESIAN_NETWORK";
            learnMethod  = "GABayesianNetwork::UMDA";
            localScoring = "GABayesianNetwork::BIC_SCORE";
            simMethod    = "GABayesianNetwork::PLS";
            coding       = "Integer";
            desc         = "Integer Encoding + Bayesian Network + Uniform Initializer + UMDA + BIC Score + PLS";
            ids          = "IntBayesUMDABICPLS"; },

          { alg          = "eda";
            ini          = "IntegerOrderedInitializer";
            obj          = "objectiveInt";
            sper         = 0.1;
            network      = "BAYESIAN_NETWORK";
            learnMethod  = "GABayesianNetwork::UMDA";
            localScoring = "GABayesianNetwork::BIC_SCORE";
            simMethod    = "GABayesianNetwork::PLS_CORRECT";
            coding       = "Integer";
            desc         = "Integer Encoding + Bayesian Network + Ordered Initializer + UMDA + BIC Score + PLS CORRECT";
            ids          = "IntBayesUMDABICPLSC"; },

# ###############
# DE Techniques #
# ###############

         { alg    = "de";
           cx     = "RealExponentialCrossover";
           ini    = "RealUniformInitializer";
           obj    = "objective";
           f      = 0.9;
           cr     = 0.9;
           coding = "Real";
           desc   = "DE: Real Encoding + Exponential Crossover + Uniform Initializer";
           ids    = "DERealExpUni99";
           select = "random"; },

         { alg    = "de";
           cx     = "RealBinomialCrossover";
           ini    = "RealUniformInitializer";
           obj    = "objective";
           f      = 0.9;
           cr     = 0.5;
           coding = "Real";
           desc   = "DE: Real Encoding + Binomial Crossover + Uniform Initializer";
           ids    = "DERealBinUni";
           select = "random"; },

         { alg    = "de";
           cx     = "RealExponentialCrossover";
           ini    = "RealUniformInitializer";
           obj    = "objective";
           f      = 0.7;
           cr     = 0.7;
           coding = "Real";
           desc   = "DE: Real Encoding + Exponential Crossover + Uniform Initializer";
           ids    = "DERealExpUni77";
           select = "random"; }

);
